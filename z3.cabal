cabal-version: >= 1.10

-- This file has been generated from package.yaml by hpack version 0.37.0.
--
-- see: https://github.com/sol/hpack

name:           z3
version:        411.0.1
description:    Bindings for the Z3 4./x/ Theorem Prover (<https://github.com/Z3Prover/z3>).
                .
                * "Z3.Base.C" provides the raw foreign imports from Z3's C API.
                .
                * "Z3.Base" does the marshaling of values between Haskell and C,
                and transparently handles reference counting of Z3 objects for you.
                .
                * "Z3.Monad" provides a convenient monadic wrapper for the common usage scenario.
                .
                Examples: <https://github.com/IagoAbal/haskell-z3/tree/master/examples>
                .
                Changelog: <https://github.com/IagoAbal/haskell-z3/blob/master/CHANGES.md>
                .
                Installation:
                .
                * /Unix-like/: Just be sure to use the standard locations for
                dynamic libraries (\/usr\/lib) and header files (\/usr\/include),
                or else use the --extra-lib-dirs and --extra-include-dirs Cabal flags.
                .
                (Hackage reports a build failure because Z3's library is missing.)
category:       Math, SMT, Theorem Provers, Formal Methods, Bit vectors
homepage:       https://github.com/IagoAbal/haskell-z3#readme
bug-reports:    https://github.com/IagoAbal/haskell-z3/issues
author:         Iago Abal <mail@iagoabal.eu>, David Castro <david.castro.dcp@gmail.com>
maintainer:     Iago Abal <mail@iagoabal.eu>
copyright:      2012-2022, Iago Abal, David Castro
license:        BSD3
license-file:   LICENSE
build-type:     Simple
extra-source-files:
    README.md
    CHANGES.md
    HACKING.md

source-repository head
  type: git
  location: https://github.com/IagoAbal/haskell-z3

flag examples
  description: Build examples.
  manual: True
  default: False

library
  exposed-modules:
      Z3.Base
      Z3.Base.C
      Z3.Common
      Z3.Lock
      Z3.Monad
      Z3.Monad.Operators
      Z3.Opts
      Z3.RLock
  other-modules:
      Paths_z3
  hs-source-dirs:
      src
  default-extensions:
      FlexibleInstances
      FlexibleContexts
      ForeignFunctionInterface
      MultiParamTypeClasses
      LambdaCase
      ScopedTypeVariables
  other-extensions:
      CPP
      DeriveDataTypeable
      EmptyDataDecls
      GeneralizedNewtypeDeriving
      PatternGuards
  ghc-options: -Wall
  build-tools:
      hsc2hs
  build-depends:
      base >=4.5 && <5
    , containers
    , transformers >=0.2
  default-language: Haskell2010
  if impl(ghc < 8)
    build-depends:
        semigroups >=0.5
  if os(darwin) || os(windows)
    extra-libraries:
        z3
  else
    extra-libraries:
        gomp z3 gomp

executable examples
  main-is: Main.hs
  other-modules:
      Example.Monad.DataTypes
      Example.Monad.FuncModel
      Example.Monad.IntList
      Example.Monad.LinearProgramming
      Example.Monad.MutuallyRecursive
      Example.Monad.ParserEvalInterface
      Example.Monad.ParserInterface
      Example.Monad.QuantifierElimination
      Example.Monad.Quantifiers
      Example.Monad.Queens4
      Example.Monad.Queens4All
      Example.Monad.ToSMTLib
      Example.Monad.Tuple
      Paths_z3
  hs-source-dirs:
      examples
  default-extensions:
      FlexibleInstances
      FlexibleContexts
      ForeignFunctionInterface
      MultiParamTypeClasses
      LambdaCase
      ScopedTypeVariables
  other-extensions:
      CPP
      DeriveDataTypeable
      EmptyDataDecls
      GeneralizedNewtypeDeriving
      PatternGuards
  build-depends:
      base >=4.5 && <5
    , containers
    , transformers >=0.2
    , z3
  default-language: Haskell2010
  if impl(ghc < 8)
    build-depends:
        semigroups >=0.5
  if flag(examples)
    buildable: True
  else
    buildable: False

test-suite z3-test
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  other-modules:
      Z3.Base.Spec
      Z3.Monad.Operators.Spec
      Z3.Monad.Spec
      Z3.Regression
      Z3.Tutorial
      Example.Monad.DataTypes
      Example.Monad.FuncModel
      Example.Monad.IntList
      Example.Monad.LinearProgramming
      Example.Monad.MutuallyRecursive
      Example.Monad.ParserEvalInterface
      Example.Monad.ParserInterface
      Example.Monad.QuantifierElimination
      Example.Monad.Quantifiers
      Example.Monad.Queens4
      Example.Monad.Queens4All
      Example.Monad.ToSMTLib
      Example.Monad.Tuple
      Main
      Paths_z3
  hs-source-dirs:
      test
      examples
  default-extensions:
      FlexibleInstances
      FlexibleContexts
      ForeignFunctionInterface
      MultiParamTypeClasses
      LambdaCase
      ScopedTypeVariables
  other-extensions:
      CPP
      DeriveDataTypeable
      EmptyDataDecls
      GeneralizedNewtypeDeriving
      PatternGuards
  ghc-options: -Wall -threaded -rtsopts -with-rtsopts=-N
  build-tool-depends:
      hspec-discover:hspec-discover >=2.8
  build-depends:
      QuickCheck >=2.5.1
    , base >=4.5 && <5
    , containers
    , hspec >=2.1
    , transformers >=0.2
    , z3
  default-language: Haskell2010
  if impl(ghc < 8)
    build-depends:
        semigroups >=0.5
